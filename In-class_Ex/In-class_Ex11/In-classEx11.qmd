---
title: "In-class Ex 11"

title-block-banner: true

date: "27 march 2023" 
date-modified: last-modified 
author: "Rhonda Ho Kah Yee"

format: 
  html: 
    code-fold: true 
    code-tools: true

execute: 
  message: false 
  warning: false 
  eval: false

editor: visual
---

```{r}
pacman::p_load(tmap, sf, sp, caret, stplanr, reshape2, broom, tidyverse)
```

```{r}
odbus<-read_csv("data/aspatial/origin_destination_bus_202210.csv")
```

Take note: DESTINATION_PT_CODE and ORIGIN_PT_CODE is in numeric form, but it should not be

```{r}
#change to factor type (character field, ordinal scale)
odbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)
odbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE)

```

Extract Study Area - Weekdays, between 7 and 9 hours

```{r}
odbus7_9 <-odbus %>%
  filter(DAY_TYPE=="WEEKDAY") %>%
  filter(TIME_PER_HOUR>=7 & TIME_PER_HOUR <=9) %>%
  group_by(ORIGIN_PT_CODE,DESTINATION_PT_CODE)%>%
  summarise(TRIPS=sum(TOTAL_TRIPS))
```

```{r}
#| eval: false
write_rds(odbus7_9,"data/rds/odbus7_9.rds")
```

```{r}
odbus7_9<- read_rds("data/rds/odbus7_9.rds")
```

```{r}
busstop <- st_read(dsn="data/geospatial", layer="BusStop") %>%
  st_transform(crs=3414)


```

```{r}
mpsz <- st_read(dsn="data/geospatial", layer="MPSZ-2019") %>%
  st_transform(crs=3414)

mpsz
```

```{r}
#retain bus stop number and the subzone code, without the geometry
busstop_mpsz <- st_intersection(busstop, mpsz) %>% 
  select(BUS_STOP_N, SUBZONE_C) %>%
  st_drop_geometry()

#busstop and busstop_mpsz - there is 5 missing values, but those are from JB area so not important
```

```{r}
od_data <-left_join(odbus7_9, busstop_mpsz,
                    by = c("ORIGIN_PT_CODE"="BUS_STOP_N"))%>%
  rename(ORIGIN_BS = ORIGIN_PT_CODE,
         ORIGIN_SZ= SUBZONE_C,
         DESTIN_BS = DESTINATION_PT_CODE)
```

Check for duplicates

```{r}
#checks for duplicate records - there is 930 duplicates!
#in this case, we can remove duplicates by keeping unique values

duplicate <- od_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()

#rerun this code to determine if we have sucessfully get rid of duplicate records - duplicate records should be 0
```

Get unique values for od_data

```{r}
od_data <- unique(od_data)
```

left join destination bus stop with bus stop number

```{r}
od_data <-left_join(od_data, busstop_mpsz,
                    by = c("DESTIN_BS"="BUS_STOP_N"))%>%
  drop_na()

# needs to drop NA as we cannot use it
```

```{r}
#| eval: false
write_rds(od_data,"data/rds/od_data.rds")
```

```{r}
tmap_mode("view")
tmap_options(check.and.fix = TRUE)
qtm(mpsz)
```

Sort the data by sub zone so we don't have to manually sort it

```{r}
mpsz <-mpsz[order(mpsz$SUBZONE_C),]
head(mpsz,10)
```

```{r}
mpsz_sp <-as(mpsz,"Spatial")
```

compute distance matrix using sp method instead of sf method (previous class ex)

```{r}
dist <- spDists(mpsz_sp)
dist
```

```{r}
sz_names <-mpsz$SUBZONE_C
```

update dist columns and rows names

```{r}
colnames(dist) <- paste0(sz_names)
rownames(dist) <- paste0(sz_names)
```

pivoting distance value by subzone

```{r}
distPair <- melt(dist) %>% #melt works like pivot longer
  rename(dist= value)
head(distPair,10)
```

if pair distance is 0, update to 50, else no change

```{r}
distPair$dist <- ifelse(distPair$dist == 0, 
                        50,
                        distPair$dist)
```

```{r}
distPair <- distPair %>%
  rename(orig = Var1,
         dest = Var2)
```

```{r}
flow_data <- od_data %>%
  group_by(ORIGIN_SZ,DESTIN_SZ) %>%
  summarise(TRIPS = sum(TRIPS))
```

```{r}
pop <- read_csv("data/aspatial/pop.csv")
```

```{r}
pop <-pop %>% 
  left_join(mpsz, by = c("PA"="PLN_AREA_N",
                         "SZ"="SUBZONE_N")) %>%
  select(1:6) %>%
  rename(SZ_NAME=)
```

```{r}
flow_data1 <- flow_data %>%
  left_join(distPair,
            by = c("ORIGIN_SZ"="orig",
                   "DESTIN_SZ"="dest"))
```

```{r}
#origin ver
flow_data1 <- flow_data1 %>%
  left_join(pop,
            by = c("ORIGIN_SZ"="SZ")) %>%
  rename(ORIGIN_AGE7_12 = AGE7_12,
         ORIGIN_AGE13_24 = AGE13_24,
         ORIGIN_AGE25_64 = AGE25_64) %>%
  select(-c(PA, SZ_NAME))

```

```{r}
#destination ver
flow_data1 <- flow_data1 %>%
  left_join(pop,
            by = c("DESTIN_SZ"="SZ")) %>%
  rename(DESTIN_AGE7_12 = AGE7_12,
         DESTIN_AGE13_24 = AGE13_24,
         DESTIN_AGE25_64 = AGE25_64) %>%
  select(-c(PA, SZ_NAME))

```

```{r}

```
